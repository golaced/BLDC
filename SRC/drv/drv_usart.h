/*
 *  usart.h
 *
 *  Created on: Jun 26, 2013
 *      Author: Denis aka caat
 */
///////////////////////////////////////////////////////////////////////////////

#pragma once

///////////////////////////////////////////////////////////////////////////////
#include "stm32f10x.h"
extern unsigned int IrqCntUart4;

///////////////////////////////////////////////////////////////////////////////

void Usart4Init(void);

///////////////////////////////////////////////////////////////////////////////

void USART_PutChar(uint8_t ch);

///////////////////////////////////////////////////////////////////////////////

void USART_PutString(uint8_t *str);

///////////////////////////////////////////////////////////////////////////////

void USART_PutCharDirect(uint8_t ch);

///////////////////////////////////////////////////////////////////////////////

void USART_PutStringDirect(uint8_t *str);

///////////////////////////////////////////////////////////////////////////////

void USART_Flush(void);

///////////////////////////////////////////////////////////////////////////////

int USART_GetChar(void);

///////////////////////////////////////////////////////////////////////////////

int USART_PeekChar(void);

///////////////////////////////////////////////////////////////////////////////

int USART_Available(void);

///////////////////////////////////////////////////////////////////////////////

void InitUart4Buffer(void);

///////////////////////////////////////////////////////////////////////////////

void TestUart4Buffer(void);

///////////////////////////////////////////////////////////////////////////////

void UART4_IRQHandler(void);


typedef struct int16_rcget{
	      u16 lose_cnt,lose_cnt_rx;
	      u8 connect,reset;
	      u8 en_bldc[3];
	      u8 en_bldc_force[3];
	      u8 power[3];
	      float attitude[3];
	      float rad[3];
	      float exp_att[3],exp_rad[3];
	      u16 encoder_loss[3],en_code_connect[3];
        }BLDC;

extern BLDC bldc;

void Send_BLDC(void);				
				
#define BYTE0(dwTemp)       (*(char *)(&dwTemp))
#define BYTE1(dwTemp)       (*((char *)(&dwTemp) + 1))
#define BYTE2(dwTemp)       (*((char *)(&dwTemp) + 2))
#define BYTE3(dwTemp)       (*((char *)(&dwTemp) + 3))
	

///////////////////////////////////////////////////////////////////////////////
